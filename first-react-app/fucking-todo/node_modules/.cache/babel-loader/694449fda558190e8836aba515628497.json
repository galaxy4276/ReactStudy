{"ast":null,"code":"var _jsxFileName = \"R:\\\\React\\\\ReactStudy\\\\first-react-app\\\\fucking-todo\\\\src\\\\App.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const nextId = useRef(0);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current++;\n  }, [todos]);\n  const onRemove = useCallback(id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }, [todos]);\n  const onToggle = useCallback(id => {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      checked: !todo.checked\n    } : todo));\n  }, [todos]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TodoTemplate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TodoInsert, {\n    onInsert: onInsert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onRemove: onRemove,\n    onToggle: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["R:/React/ReactStudy/first-react-app/fucking-todo/src/App.js"],"names":["React","useState","useRef","useCallback","TodoInsert","TodoList","TodoTemplate","App","todos","setTodos","nextId","onInsert","text","todo","id","current","checked","concat","onRemove","filter","onToggle","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAIA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMS,MAAM,GAAGR,MAAM,CAAC,CAAD,CAArB;AAGA,QAAMS,QAAQ,GAAGR,WAAW,CAC1BS,IAAI,IAAI;AACN,UAAMC,IAAI,GAAG;AACXC,MAAAA,EAAE,EAAEJ,MAAM,CAACK,OADA;AAEXH,MAAAA,IAFW;AAGXI,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKAP,IAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaJ,IAAb,CAAD,CAAR;AACAH,IAAAA,MAAM,CAACK,OAAP;AACD,GATyB,EASvB,CAACP,KAAD,CATuB,CAA5B;AAYA,QAAMU,QAAQ,GAAGf,WAAW,CAC1BW,EAAE,IAAI;AACJL,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD,GAHyB,EAGvB,CAACN,KAAD,CAHuB,CAA5B;AAMA,QAAMY,QAAQ,GAAGjB,WAAW,CAC1BW,EAAE,IAAI;AACJL,IAAAA,QAAQ,CACND,KAAK,CAACa,GAAN,CAAUR,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGD,IAAJ;AAAUG,MAAAA,OAAO,EAAE,CAACH,IAAI,CAACG;AAAzB,KAAjB,GAAsDH,IAAxE,CADM,CAAR;AAGD,GALyB,EAKvB,CAACL,KAAD,CALuB,CAA5B;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAGG,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAGH,KAAlB;AAA0B,IAAA,QAAQ,EAAGU,QAArC;AAAgD,IAAA,QAAQ,EAAGE,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD;;AAGD,eAAeb,GAAf","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport TodoInsert from './components/TodoInsert';\r\nimport TodoList from './components/TodoList';\r\nimport TodoTemplate from './components/TodoTemplate';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const nextId = useRef(0);\r\n\r\n\r\n  const onInsert = useCallback(\r\n    text => {\r\n      const todo = {\r\n        id: nextId.current,\r\n        text,\r\n        checked: false\r\n      };\r\n      setTodos(todos.concat(todo));\r\n      nextId.current++;\r\n    }, [todos]\r\n  );\r\n\r\n  const onRemove = useCallback(\r\n    id => {\r\n      setTodos(todos.filter(todo => todo.id !== id));\r\n    }, [todos]\r\n  );\r\n\r\n  const onToggle = useCallback(\r\n    id => {\r\n      setTodos(\r\n        todos.map(todo => todo.id === id ? {...todo, checked: !todo.checked } : todo)\r\n      );\r\n    }, [todos]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <TodoTemplate>\r\n        <TodoInsert onInsert={ onInsert } />\r\n        <TodoList todos={ todos } onRemove={ onRemove } onToggle={ onToggle } />\r\n      </TodoTemplate>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}