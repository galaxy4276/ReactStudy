{"ast":null,"code":"var _jsxFileName = \"R:\\\\React\\\\ReactStudy\\\\first-react-app\\\\solo-todo\\\\src\\\\App.js\";\nimport React, { useRef, useState, useCallback, useReducer } from 'react';\nimport TodoListTemplate from './components/TodoListTemplate';\nimport TodoListInput from './components/TodoListInput';\nimport TodoList from './components/TodoList';\n\nfunction createBulkTodos() {\n  const array = [];\n\n  for (let i = 1; i <= 2500; i++) {\n    array.push({\n      id: i,\n      text: `할 일: ${i}`,\n      checked: false\n    });\n  }\n\n  return array;\n}\n\nfunction todoReducer(todos, action) {\n  switch (action.type) {\n    case 'INSERT':\n      // { type: todo:  { id: 1, text: 'todo', checked: false } }\n      return todos.concat(action.todo);\n\n    case 'REMOVE':\n      // { type: 'REMOVE', id: 1 }\n      return todos.filter(todo => todo.id !== action.id);\n\n    case 'TOGGLE':\n      return todos.map(todo => todo.id === action.id ? { ...todo,\n        checked: !todo.checked\n      } : todo);\n\n    default:\n      return todos;\n  }\n}\n\nfunction App() {\n  // const [todos, setTodos] = useState(createBulkTodos);\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\n  const nextId = useRef(2501);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    dispatch({\n      type: 'INSERT',\n      todo\n    });\n    nextId.current++;\n  }, []);\n  const onRemove = useCallback(id => {\n    dispatch({\n      type: 'REMOVE',\n      id\n    });\n  }, []);\n  const onToggle = useCallback(id => {\n    dispatch({\n      type: 'TOGGLE',\n      id\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(TodoListTemplate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TodoListInput, {\n    onInsert: onInsert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    onRemove: onRemove,\n    onToggle: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["R:/React/ReactStudy/first-react-app/solo-todo/src/App.js"],"names":["React","useRef","useState","useCallback","useReducer","TodoListTemplate","TodoListInput","TodoList","createBulkTodos","array","i","push","id","text","checked","todoReducer","todos","action","type","concat","todo","filter","map","App","dispatch","undefined","nextId","onInsert","current","onRemove","onToggle"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useCallback, useReducer } from 'react';\r\nimport TodoListTemplate from './components/TodoListTemplate';\r\nimport TodoListInput from './components/TodoListInput';\r\nimport TodoList from './components/TodoList';\r\n\r\n\r\nfunction createBulkTodos() {\r\n  const array = [];\r\n  for (let i = 1; i <= 2500; i++) {\r\n    array.push({\r\n      id: i,\r\n      text: `할 일: ${i}`,\r\n      checked: false\r\n    });\r\n  }\r\n  \r\n  return array;\r\n}\r\n\r\n\r\nfunction todoReducer(todos, action) {\r\n  switch (action.type) {\r\n    case 'INSERT':\r\n      // { type: todo:  { id: 1, text: 'todo', checked: false } }\r\n      return todos.concat(action.todo);\r\n    case 'REMOVE':\r\n      // { type: 'REMOVE', id: 1 }\r\n      return todos.filter(todo => todo.id !== action.id);\r\n    case 'TOGGLE':\r\n      return todos.map(todo => \r\n        todo.id === action.id ? { ...todo, checked: !todo.checked } : todo );\r\n    default:\r\n      return todos;\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction App() {\r\n  // const [todos, setTodos] = useState(createBulkTodos);\r\n  const [todos, dispatch] = useReducer(todoReducer, undefined, createBulkTodos);\r\n\r\n  const nextId = useRef(2501);\r\n\r\n  const onInsert = useCallback(\r\n    text => {\r\n      const todo = {\r\n        id: nextId.current,\r\n        text,\r\n        checked: false\r\n      };\r\n      dispatch({ type: 'INSERT', todo });\r\n      nextId.current++;\r\n    }, []\r\n  );\r\n\r\n  const onRemove = useCallback(\r\n    id => {\r\n      dispatch({ type: 'REMOVE', id });\r\n    }, []\r\n  )\r\n\r\n  const onToggle = useCallback(\r\n    id => {\r\n      dispatch({ type: 'TOGGLE', id });\r\n    }, []\r\n  );\r\n\r\n\r\n  return (\r\n    <TodoListTemplate >\r\n      <TodoListInput onInsert={ onInsert }/>\r\n      <TodoList todos={ todos } onRemove={ onRemove } onToggle={ onToggle }/>\r\n    </TodoListTemplate>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}